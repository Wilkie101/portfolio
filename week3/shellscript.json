{
	// Place your snippets for shellscript here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"Add user read entry": {
		"scope": "sh",
		"prefix": "readuser",
		"body": [
			"read -p "prompt customer text here: " var",
		],
		"description": "Adds User Prompt"
	}
	
	"Case Statement": {
		"scope": "sh",
		"prefix": "readuser",
		"body": [
			"case variable_name in
			value1)
			  STATEMENTS
			  ;;
			value2)
			  STATEMENTS
			  ;;
		  	value3)
			  STATEMENTS
			  ;;
		  	*)
			  STATEMENTS
			  ;;
		  esac",
		],
		"description": "Adds correct syntax for case"
	}

	"Add Black": {
		"scope": "sh",
		"prefix": "black",
		"body": [
			"BLACK=\033[30m",
		],
		"description": "Adds Black"
	}
	
	"Add Red": {
		"scope": "sh",
		"prefix": "red",
		"body": [
			"RED=\033[31m",
		],
		"description": "Adds Red"
	}
	
	"Add Blue": {
		"scope": "sh",
		"prefix": "blue",
		"body": [
			"BLUE=\033[34m",
		],
		"description": "Adds Blue"
	}

	"Add Green": {
		"scope": "sh",
		"prefix": "green",
		"body": [
			"GREEN=\033[32m",
		],
		"description": "Adds Green"
	}

	"Add Purple": {
			"scope": "sh",
			"prefix": "purple",
			"body": [
				"PURPLE=\033[35m",
		],
		"description": "Adds Purple"
	}

	"Back to Normal": {
		"scope": "sh",
		"prefix": "NC",
		"body": [
			"NC=\033[0m",
		],
		"description": "Removes Colour Formatting"
	}
	
	"String Conditions": {
		"scope": "sh",
		"prefix": "conditions",
		"body": [
			"if [[ -z "$string" ]]; then # tests for an empty value in the string
					echo "String is empty"
		  elif [[ -n "$string" ]]; then # tests for a value in the string
					echo "String is not empty"
		  fi",
		],
		"description": "Testing String Values"
	}

	"Basic Loop": {
		"scope": "sh",
		"prefix": "loopbasic",
		"body": [
			"for value in /etc/rc.*; do
			  echo $value
			done",
		],
		"description": "Very Basic Loop"
	}

	"Read File": {
		"scope": "sh",
		"prefix": "readfile",
		"body": [
			"cat file.txt | while read line; do
			  echo $line
			done",			
		],
		"description": "Read File by line and print"
	}

	"C-Loop": {
		"scope": "sh",
		"prefix": "cloop",
		"body": [
			"for ((value = 0 ; value < 100 ; value++)); do
			  echo $value
			done",
			],
		"description": "C - Loop"
	}


}
